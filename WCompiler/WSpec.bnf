Program			= {<Block>}
Block			= { <FunctionCall> | <Conditional> | <Loop> | <Declaration> | <Assignment> | <Reference> | <Func> | <Break> }*

Expr			= <CompExpr> { <BoolOp> <CompExpr> }*
CompExpr		= <MathExpr> { <IntOp> <MathExpr> }*
MathExpr		= <Term> { (+ | -) <Term> }*
Term			= <SignedFactor> { (* | / | % | \) <SignedFactor> }*
SignedFactor	= { + | - } <Factor>
Factor			= (<IntLiteral> | <Ident>{.<Property>} | <FunctionCall> | (<Expr>))
IntOp			= ( > | >= | < | <= | = )
BoolOp			= ( And / Or / & / | )

BooleanExpr		= ( <Boolean> | Not <BooleanExpr> | <Expr> )
Boolean			= ( True | False )

If				= If <BooleanExpr> [ {<Block>} ] {[ {<Block>} ]}
Loop			= Repeat {<Expr>} [ {<LoopBlock>} ]
Break			= Escape

Import			= { <Reference> }
Reference		= REF <Ident> { FROM <FilePath> }

Func			= { Public } Func <Ident> [ {<Block>} ]

Declaration		= Item <Ident> { = <Expr> }
Assignment		= <Ident> = <Expr>

FunctionCall	= <Ident>({<Params>})
Params			= { <Expr> | <Expr>, <Params> }